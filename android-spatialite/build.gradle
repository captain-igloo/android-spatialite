import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id "de.undercouch.download"
    id "com.android.library"
    id "com.vanniktech.maven.publish" version "0.25.3"
}

android {
    buildToolsVersion = "34.0.0"
    ndkVersion "25.2.9519653"

    compileSdk 34

    namespace "com.github.captainigloo.android.database"

    defaultConfig {
        minSdkVersion 26
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "proguard-rules.pro"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        externalNativeBuild {
            cmake {
                // explicitly build libs
                targets 'sqlite3', 'proj', 'iconv', 'geos', 'rttopo', 'libspatialite', 'android_spatialite'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
}

dependencies {
    api("androidx.core:core:1.10.1")
    api("androidx.sqlite:sqlite:2.3.1")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test:core:1.5.0")
    androidTestImplementation("androidx.test:runner:1.5.2")
    androidTestImplementation("androidx.test:rules:1.5.0")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
}

tasks.register("javadoc", Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.configureEach { variant ->
        if (variant.name == "release") {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude "**/R.html", "**/R.*.html", "**/index.html"
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }

    failOnError false
}

mavenPublishing {
    publishToMavenCentral(SonatypeHost.DEFAULT, /* automaticRelease */ true)
    signAllPublications()
}
